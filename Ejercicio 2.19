import React, { useState, useEffect } from "react";
import axios from "axios";

const App = () => {
  const [countries, setCountries] = useState([]);
  const [search, setSearch] = useState("");
  const [filteredCountries, setFilteredCountries] = useState([]);
  const [selectedCountry, setSelectedCountry] = useState(null);

  useEffect(() => {
    axios
      .get("https://studies.cs.helsinki.fi/restcountries/api/all")
      .then(response => {
        setCountries(response.data);
      })
      .catch(error => {
        console.error("Error fetching countries:", error);
      });
  }, []);

  const handleSearchChange = (event) => {
    setSearch(event.target.value);

    if (event.target.value !== "") {
      const filtered = countries.filter(country =>
        country.name.common.toLowerCase().includes(event.target.value.toLowerCase())
      );
      setFilteredCountries(filtered);
      setSelectedCountry(null);  // Reseteamos la vista del país seleccionado si cambia la búsqueda
    } else {
      setFilteredCountries([]);
      setSelectedCountry(null);  // Reseteamos la vista del país seleccionado si no hay búsqueda
    }
  };

  const handleShowDetails = (country) => {
    setSelectedCountry(country);
  };

  return (
    <div>
      <h1>Country Information</h1>
      <div>
        <input
          value={search}
          onChange={handleSearchChange}
          placeholder="Search for a country"
        />
      </div>
      {selectedCountry ? (
        <CountryDetails country={selectedCountry} />
      ) : (
        <CountryList countries={filteredCountries} onShowDetails={handleShowDetails} />
      )}
    </div>
  );
};

const CountryList = ({ countries, onShowDetails }) => {
  if (countries.length > 10) {
    return <p>Too many matches, specify another filter</p>;
  }

  if (countries.length > 1) {
    return (
      <div>
        {countries.map((country) => (
          <div key={country.cca3}>
            {country.name.common}{" "}
            <button onClick={() => onShowDetails(country)}>show</button>
          </div>
        ))}
      </div>
    );
  }

  if (countries.length === 1) {
    return <CountryDetails country={countries[0]} />;
  }

  return <p>No matches found</p>;
};

const CountryDetails = ({ country }) => {
  return (
    <div>
      <h2>{country.name.common}</h2>
      <p>Capital: {country.capital}</p>
      <p>Area: {country.area} km²</p>
      <h4>Languages:</h4>
      <ul>
        {Object.values(country.languages).map((language, index) => (
          <li key={index}>{language}</li>
        ))}
      </ul>
      <img
        src={country.flags.svg}
        alt={`Flag of ${country.name.common}`}
        style={{ width: "150px", border: "1px solid black" }}
      />
      <button onClick={() => window.location.reload()}>Go back</button>
    </div>
  );
};

export default App;
