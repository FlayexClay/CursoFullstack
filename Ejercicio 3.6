const express = require('express')

const app = express()

app.use(express.json())

let notes = [
  {
    id: 1,
    content: "HTML is easy pe causa",
    important: true
  },
  {
    id: 2,
    content: "Browser can execute only JavaScript mi king conchatumare",
    important: false
  },
  {
    id: 3,
    content: "GET and POST are the most important methods of HTTP protocol",
    important: true
  }
]

// Ruta principal
app.get('/', (request, response) =>{
    response.send('<h1>Hello World</h1>')
})

// Obtener todas las notas
app.get('/api/notes', (request, response) => {
    response.json(notes)
})

// Obtener una nota específica por ID
app.get('/api/notes/:id', (request, response) => {
    const id = Number(request.params.id)
    const note = notes.find(note => note.id === id)
    if (note) {
        response.json(note)
    } else {
        response.status(404).end()
    }
})

// Eliminar una nota por ID
app.delete('/api/notes/:id', (request, response) => {
    const id = Number(request.params.id)
    notes = notes.filter(note => note.id !== id)
    response.status(204).end()
})

// Crear una nueva nota con manejo de errores
app.post('/api/notes', (request, response) => {
    const note = request.body

    // Validar que el contenido de la nota esté presente
    if (!note || !note.content) {
        return response.status(400).json({
            error: "Content is missing"
        })
    }

    // Verificar si el contenido ya existe en la agenda
    const noteExists = notes.some(existingNote => existingNote.content === note.content)
    if (noteExists) {
        return response.status(400).json({
            error: "Content must be unique"
        })
    }

    // Generar un nuevo ID para la nota
    const ids = notes.map(note => note.id)
    const maxId = ids.length > 0 ? Math.max(...ids) : 0

    const newNote = {
        id: maxId + 1,
        content: note.content,
        important: typeof note.important !== 'undefined' ? note.important : false
    }

    notes = [...notes, newNote]
    response.json(newNote)
})

const PORT = 3001
app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`)
})
